# a model in django is actually a table in the database
# models are objects that creates data in django which is actually tables in the database
#                     CREATING TABLE MODEL

#navigate to the model.py file in the app (players) folder
# add a player table by creating a player class and describr table filed in it:
# from django import.db import models
# class Player(models.Model):
#   firstname = models.CharField(max_length=255)
#   lastname = models.CharField(max_length=255)
#   age = models.IntegerField(max_length=255)


# SQLite Database
# SQLite is a serverless, self-contained, file-based database that doesn't require a separate server
# SQLite is a good choice for small to medium-sized applications, or for applications that don't requir
# when we create a project(my_club) an empty sqlite datase is created by the name db.sqlite3
# by default all models created in the project will be created as tables in this database


          #Migration
# navigate to the projects folder(my_club) and run a command to actually create a table in the database
# 'python manage.py makemigrations players ' this command will create a migration file in the app folder
# the output will be :
# Migrations for 'players':
#   players\migrations\0001_initial.py
#     - Create model Member

# (myapp) C:\Users\Your Name\myapp\my_club>


# Django  will create a migration file in the app folder describing the changes and store changes in the migration folder :
#my_club\ players\migrations\0001_initial.py:
# Generated by Django 4.1.2 on 2022-10-27 11:14

# from django.db import migrations, models


# class Migration(migrations.Migration):

#     initial = True

#     dependencies = [
#     ]

#     operations = [
#         migrations.CreateModel(
#             name='player',
#             fields=[
#                 ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
#                 ('firstname', models.CharField(max_length=255)),
#                 ('lastname', models.CharField(max_length=255)),
#                 ('age', models.IntegerField(max_length=255)),
#             ],
#         ),
#     ]

# N/B  django automatically inserts an id filed in the tables that is an auto increament number

# since is not created yet one more command will have to be run more command then django will create and execute an sql statement based on the content in the new file in mugrations folder
# 'python manage.py migrate' this command will create the table in the database

# the output will be like:
# Operations to perform:
# Apply all migrations: admin, auth, contenttypes, players, sessions
# Running migrations:
#   Applying players.0001_initial... OK

# (myapp) C:\Users\Your Name\myapp\my_club>

       # VIEW THE SQL
# you can view the sql statement executed in the migration statement by using the following command with the migration number
# python manage.py sqlmigrate players 0001